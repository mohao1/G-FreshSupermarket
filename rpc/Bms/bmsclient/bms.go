// Code generated by goctl. DO NOT EDIT.
// Source: Bms.proto

package bmsclient

import (
	"context"

	"DP/rpc/Bms/pb/bms"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Announcement             = bms.Announcement
	AnnouncementListReq      = bms.AnnouncementListReq
	AnnouncementListResp     = bms.AnnouncementListResp
	AnnouncementReq          = bms.AnnouncementReq
	AnnouncementResp         = bms.AnnouncementResp
	CompleteOrderReq         = bms.CompleteOrderReq
	CompleteOrderResp        = bms.CompleteOrderResp
	DeleteAnnouncementReq    = bms.DeleteAnnouncementReq
	DeleteAnnouncementResp   = bms.DeleteAnnouncementResp
	DeleteEmployeeReq        = bms.DeleteEmployeeReq
	DeleteEmployeeResp       = bms.DeleteEmployeeResp
	DeleteLowProductReq      = bms.DeleteLowProductReq
	DeleteLowProductResp     = bms.DeleteLowProductResp
	DeleteProductReq         = bms.DeleteProductReq
	DeleteProductResp        = bms.DeleteProductResp
	GetEmployeeListReq       = bms.GetEmployeeListReq
	GetEmployeeListResp      = bms.GetEmployeeListResp
	GetLowProductDetailsReq  = bms.GetLowProductDetailsReq
	GetLowProductDetailsResp = bms.GetLowProductDetailsResp
	GetLowProductReq         = bms.GetLowProductReq
	GetLowProductResp        = bms.GetLowProductResp
	GetPositionListReq       = bms.GetPositionListReq
	GetPositionListResp      = bms.GetPositionListResp
	GetProductDetailsReq     = bms.GetProductDetailsReq
	GetProductDetailsResp    = bms.GetProductDetailsResp
	GetProductListReq        = bms.GetProductListReq
	GetProductListResp       = bms.GetProductListResp
	GetProductTypeListReq    = bms.GetProductTypeListReq
	GetProductTypeListResp   = bms.GetProductTypeListResp
	LowProduct               = bms.LowProduct
	ManageLoginReq           = bms.ManageLoginReq
	ManageLoginResp          = bms.ManageLoginResp
	Order                    = bms.Order
	OrderData                = bms.OrderData
	OrderDataReq             = bms.OrderDataReq
	OrderDataResp            = bms.OrderDataResp
	OrderDetailsReq          = bms.OrderDetailsReq
	OrderDetailsResp         = bms.OrderDetailsResp
	OrderProduct             = bms.OrderProduct
	OverOrderHandleReq       = bms.OverOrderHandleReq
	OverOrderHandleResp      = bms.OverOrderHandleResp
	OverOrderListReq         = bms.OverOrderListReq
	OverOrderListResp        = bms.OverOrderListResp
	PersonalInfoReq          = bms.PersonalInfoReq
	PersonalInfoResp         = bms.PersonalInfoResp
	Position                 = bms.Position
	Product                  = bms.Product
	ProductType              = bms.ProductType
	ReceivedOrderReq         = bms.ReceivedOrderReq
	ReceivedOrderResp        = bms.ReceivedOrderResp
	ReceivingOrderReq        = bms.ReceivingOrderReq
	ReceivingOrderResp       = bms.ReceivingOrderResp
	ReleaseLowProductReq     = bms.ReleaseLowProductReq
	ReleaseLowProductResp    = bms.ReleaseLowProductResp
	ReleaseProductReq        = bms.ReleaseProductReq
	ReleaseProductResp       = bms.ReleaseProductResp
	SalesDataListReq         = bms.SalesDataListReq
	SalesDataListResp        = bms.SalesDataListResp
	SalesRecords             = bms.SalesRecords
	SetEmployeeReq           = bms.SetEmployeeReq
	SetEmployeeResp          = bms.SetEmployeeResp
	Staff                    = bms.Staff
	StaffLoginReq            = bms.StaffLoginReq
	StaffLoginResp           = bms.StaffLoginResp
	UnReceivingOrderReq      = bms.UnReceivingOrderReq
	UnReceivingOrderResp     = bms.UnReceivingOrderResp
	UnreceivedOrderReq       = bms.UnreceivedOrderReq
	UnreceivedOrderResp      = bms.UnreceivedOrderResp
	UpDateEmployeeReq        = bms.UpDateEmployeeReq
	UpDateEmployeeResp       = bms.UpDateEmployeeResp
	UpDateLowProductReq      = bms.UpDateLowProductReq
	UpDateLowProductResp     = bms.UpDateLowProductResp
	UpDateProductReq         = bms.UpDateProductReq
	UpDateProductResp        = bms.UpDateProductResp
	UpdateAnnouncementReq    = bms.UpdateAnnouncementReq
	UpdateAnnouncementResp   = bms.UpdateAnnouncementResp

	Bms interface {
		// ManageLogin-商户管理员的登录
		ManageLogin(ctx context.Context, in *ManageLoginReq, opts ...grpc.CallOption) (*ManageLoginResp, error)
		// StaffLogin-普通员工登录
		StaffLogin(ctx context.Context, in *StaffLoginReq, opts ...grpc.CallOption) (*StaffLoginResp, error)
		// 获取个人信息
		PersonalInfo(ctx context.Context, in *PersonalInfoReq, opts ...grpc.CallOption) (*PersonalInfoResp, error)
		// 获取身份列表
		GetPositionList(ctx context.Context, in *GetPositionListReq, opts ...grpc.CallOption) (*GetPositionListResp, error)
		// 获取员工列表
		GetEmployeeList(ctx context.Context, in *GetEmployeeListReq, opts ...grpc.CallOption) (*GetEmployeeListResp, error)
		// 设置员工
		SetEmployee(ctx context.Context, in *SetEmployeeReq, opts ...grpc.CallOption) (*SetEmployeeResp, error)
		// 删除员工
		DeleteEmployee(ctx context.Context, in *DeleteEmployeeReq, opts ...grpc.CallOption) (*DeleteEmployeeResp, error)
		// 修改员工信息
		UpDateEmployee(ctx context.Context, in *UpDateEmployeeReq, opts ...grpc.CallOption) (*UpDateEmployeeResp, error)
		// 查看未接订单
		GetUnreceivedOrder(ctx context.Context, in *UnreceivedOrderReq, opts ...grpc.CallOption) (*UnreceivedOrderResp, error)
		// 接单
		ReceivingOrder(ctx context.Context, in *ReceivingOrderReq, opts ...grpc.CallOption) (*ReceivingOrderResp, error)
		// 取消接单
		UnReceivingOrder(ctx context.Context, in *UnReceivingOrderReq, opts ...grpc.CallOption) (*UnReceivingOrderResp, error)
		// 查看已接订单
		GetReceivedOrder(ctx context.Context, in *ReceivedOrderReq, opts ...grpc.CallOption) (*ReceivedOrderResp, error)
		// 查看完成订单
		GetCompleteOrder(ctx context.Context, in *CompleteOrderReq, opts ...grpc.CallOption) (*CompleteOrderResp, error)
		// 查看订单详情
		GetOrderDetails(ctx context.Context, in *OrderDetailsReq, opts ...grpc.CallOption) (*OrderDetailsResp, error)
		// 获取商品类型列表
		GetProductTypeList(ctx context.Context, in *GetProductTypeListReq, opts ...grpc.CallOption) (*GetProductTypeListResp, error)
		// 查看普通商品列表
		GetProductList(ctx context.Context, in *GetProductListReq, opts ...grpc.CallOption) (*GetProductListResp, error)
		// 查看商品详细情况
		GetProductDetails(ctx context.Context, in *GetProductDetailsReq, opts ...grpc.CallOption) (*GetProductDetailsResp, error)
		// 设置发布普通商品
		ReleaseProduct(ctx context.Context, in *ReleaseProductReq, opts ...grpc.CallOption) (*ReleaseProductResp, error)
		// 修改发布普通商品
		UpDateProduct(ctx context.Context, in *UpDateProductReq, opts ...grpc.CallOption) (*UpDateProductResp, error)
		// 删除发布普通商品
		DeleteProduct(ctx context.Context, in *DeleteProductReq, opts ...grpc.CallOption) (*DeleteProductResp, error)
		// 查看折扣商品列表
		GetLowProduct(ctx context.Context, in *GetLowProductReq, opts ...grpc.CallOption) (*GetLowProductResp, error)
		// 查看商品详细情况
		GetLowProductDetails(ctx context.Context, in *GetLowProductDetailsReq, opts ...grpc.CallOption) (*GetLowProductDetailsResp, error)
		// 设置发布折扣商品
		ReleaseLowProduct(ctx context.Context, in *ReleaseLowProductReq, opts ...grpc.CallOption) (*ReleaseLowProductResp, error)
		// 修改发布折扣商品
		UpDateLowProduct(ctx context.Context, in *UpDateLowProductReq, opts ...grpc.CallOption) (*UpDateLowProductResp, error)
		// 删除发布折扣商品
		DeleteLowProduct(ctx context.Context, in *DeleteLowProductReq, opts ...grpc.CallOption) (*DeleteLowProductResp, error)
		// 获取申请取消的订单列表
		GetOverOrder(ctx context.Context, in *OverOrderListReq, opts ...grpc.CallOption) (*OverOrderListResp, error)
		// 取消订单申请处理
		OverOrderHandle(ctx context.Context, in *OverOrderHandleReq, opts ...grpc.CallOption) (*OverOrderHandleResp, error)
		// 查看销售数据
		GetSalesData(ctx context.Context, in *SalesDataListReq, opts ...grpc.CallOption) (*SalesDataListResp, error)
		// 查看订单数据
		GetOrderData(ctx context.Context, in *OrderDataReq, opts ...grpc.CallOption) (*OrderDataResp, error)
		// 发布公告
		PostAnnouncement(ctx context.Context, in *AnnouncementReq, opts ...grpc.CallOption) (*AnnouncementResp, error)
		// 获取公告列表
		GetAnnouncementList(ctx context.Context, in *AnnouncementListReq, opts ...grpc.CallOption) (*AnnouncementListResp, error)
		// 更新公告
		UpdateAnnouncement(ctx context.Context, in *UpdateAnnouncementReq, opts ...grpc.CallOption) (*UpdateAnnouncementResp, error)
		// 删除公告
		DeleteAnnouncement(ctx context.Context, in *DeleteAnnouncementReq, opts ...grpc.CallOption) (*DeleteAnnouncementResp, error)
	}

	defaultBms struct {
		cli zrpc.Client
	}
)

func NewBms(cli zrpc.Client) Bms {
	return &defaultBms{
		cli: cli,
	}
}

// ManageLogin-商户管理员的登录
func (m *defaultBms) ManageLogin(ctx context.Context, in *ManageLoginReq, opts ...grpc.CallOption) (*ManageLoginResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.ManageLogin(ctx, in, opts...)
}

// StaffLogin-普通员工登录
func (m *defaultBms) StaffLogin(ctx context.Context, in *StaffLoginReq, opts ...grpc.CallOption) (*StaffLoginResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.StaffLogin(ctx, in, opts...)
}

// 获取个人信息
func (m *defaultBms) PersonalInfo(ctx context.Context, in *PersonalInfoReq, opts ...grpc.CallOption) (*PersonalInfoResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.PersonalInfo(ctx, in, opts...)
}

// 获取身份列表
func (m *defaultBms) GetPositionList(ctx context.Context, in *GetPositionListReq, opts ...grpc.CallOption) (*GetPositionListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetPositionList(ctx, in, opts...)
}

// 获取员工列表
func (m *defaultBms) GetEmployeeList(ctx context.Context, in *GetEmployeeListReq, opts ...grpc.CallOption) (*GetEmployeeListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetEmployeeList(ctx, in, opts...)
}

// 设置员工
func (m *defaultBms) SetEmployee(ctx context.Context, in *SetEmployeeReq, opts ...grpc.CallOption) (*SetEmployeeResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.SetEmployee(ctx, in, opts...)
}

// 删除员工
func (m *defaultBms) DeleteEmployee(ctx context.Context, in *DeleteEmployeeReq, opts ...grpc.CallOption) (*DeleteEmployeeResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.DeleteEmployee(ctx, in, opts...)
}

// 修改员工信息
func (m *defaultBms) UpDateEmployee(ctx context.Context, in *UpDateEmployeeReq, opts ...grpc.CallOption) (*UpDateEmployeeResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.UpDateEmployee(ctx, in, opts...)
}

// 查看未接订单
func (m *defaultBms) GetUnreceivedOrder(ctx context.Context, in *UnreceivedOrderReq, opts ...grpc.CallOption) (*UnreceivedOrderResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetUnreceivedOrder(ctx, in, opts...)
}

// 接单
func (m *defaultBms) ReceivingOrder(ctx context.Context, in *ReceivingOrderReq, opts ...grpc.CallOption) (*ReceivingOrderResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.ReceivingOrder(ctx, in, opts...)
}

// 取消接单
func (m *defaultBms) UnReceivingOrder(ctx context.Context, in *UnReceivingOrderReq, opts ...grpc.CallOption) (*UnReceivingOrderResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.UnReceivingOrder(ctx, in, opts...)
}

// 查看已接订单
func (m *defaultBms) GetReceivedOrder(ctx context.Context, in *ReceivedOrderReq, opts ...grpc.CallOption) (*ReceivedOrderResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetReceivedOrder(ctx, in, opts...)
}

// 查看完成订单
func (m *defaultBms) GetCompleteOrder(ctx context.Context, in *CompleteOrderReq, opts ...grpc.CallOption) (*CompleteOrderResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetCompleteOrder(ctx, in, opts...)
}

// 查看订单详情
func (m *defaultBms) GetOrderDetails(ctx context.Context, in *OrderDetailsReq, opts ...grpc.CallOption) (*OrderDetailsResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetOrderDetails(ctx, in, opts...)
}

// 获取商品类型列表
func (m *defaultBms) GetProductTypeList(ctx context.Context, in *GetProductTypeListReq, opts ...grpc.CallOption) (*GetProductTypeListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetProductTypeList(ctx, in, opts...)
}

// 查看普通商品列表
func (m *defaultBms) GetProductList(ctx context.Context, in *GetProductListReq, opts ...grpc.CallOption) (*GetProductListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetProductList(ctx, in, opts...)
}

// 查看商品详细情况
func (m *defaultBms) GetProductDetails(ctx context.Context, in *GetProductDetailsReq, opts ...grpc.CallOption) (*GetProductDetailsResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetProductDetails(ctx, in, opts...)
}

// 设置发布普通商品
func (m *defaultBms) ReleaseProduct(ctx context.Context, in *ReleaseProductReq, opts ...grpc.CallOption) (*ReleaseProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.ReleaseProduct(ctx, in, opts...)
}

// 修改发布普通商品
func (m *defaultBms) UpDateProduct(ctx context.Context, in *UpDateProductReq, opts ...grpc.CallOption) (*UpDateProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.UpDateProduct(ctx, in, opts...)
}

// 删除发布普通商品
func (m *defaultBms) DeleteProduct(ctx context.Context, in *DeleteProductReq, opts ...grpc.CallOption) (*DeleteProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.DeleteProduct(ctx, in, opts...)
}

// 查看折扣商品列表
func (m *defaultBms) GetLowProduct(ctx context.Context, in *GetLowProductReq, opts ...grpc.CallOption) (*GetLowProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetLowProduct(ctx, in, opts...)
}

// 查看商品详细情况
func (m *defaultBms) GetLowProductDetails(ctx context.Context, in *GetLowProductDetailsReq, opts ...grpc.CallOption) (*GetLowProductDetailsResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetLowProductDetails(ctx, in, opts...)
}

// 设置发布折扣商品
func (m *defaultBms) ReleaseLowProduct(ctx context.Context, in *ReleaseLowProductReq, opts ...grpc.CallOption) (*ReleaseLowProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.ReleaseLowProduct(ctx, in, opts...)
}

// 修改发布折扣商品
func (m *defaultBms) UpDateLowProduct(ctx context.Context, in *UpDateLowProductReq, opts ...grpc.CallOption) (*UpDateLowProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.UpDateLowProduct(ctx, in, opts...)
}

// 删除发布折扣商品
func (m *defaultBms) DeleteLowProduct(ctx context.Context, in *DeleteLowProductReq, opts ...grpc.CallOption) (*DeleteLowProductResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.DeleteLowProduct(ctx, in, opts...)
}

// 获取申请取消的订单列表
func (m *defaultBms) GetOverOrder(ctx context.Context, in *OverOrderListReq, opts ...grpc.CallOption) (*OverOrderListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetOverOrder(ctx, in, opts...)
}

// 取消订单申请处理
func (m *defaultBms) OverOrderHandle(ctx context.Context, in *OverOrderHandleReq, opts ...grpc.CallOption) (*OverOrderHandleResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.OverOrderHandle(ctx, in, opts...)
}

// 查看销售数据
func (m *defaultBms) GetSalesData(ctx context.Context, in *SalesDataListReq, opts ...grpc.CallOption) (*SalesDataListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetSalesData(ctx, in, opts...)
}

// 查看订单数据
func (m *defaultBms) GetOrderData(ctx context.Context, in *OrderDataReq, opts ...grpc.CallOption) (*OrderDataResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetOrderData(ctx, in, opts...)
}

// 发布公告
func (m *defaultBms) PostAnnouncement(ctx context.Context, in *AnnouncementReq, opts ...grpc.CallOption) (*AnnouncementResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.PostAnnouncement(ctx, in, opts...)
}

// 获取公告列表
func (m *defaultBms) GetAnnouncementList(ctx context.Context, in *AnnouncementListReq, opts ...grpc.CallOption) (*AnnouncementListResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.GetAnnouncementList(ctx, in, opts...)
}

// 更新公告
func (m *defaultBms) UpdateAnnouncement(ctx context.Context, in *UpdateAnnouncementReq, opts ...grpc.CallOption) (*UpdateAnnouncementResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.UpdateAnnouncement(ctx, in, opts...)
}

// 删除公告
func (m *defaultBms) DeleteAnnouncement(ctx context.Context, in *DeleteAnnouncementReq, opts ...grpc.CallOption) (*DeleteAnnouncementResp, error) {
	client := bms.NewBmsClient(m.cli.Conn())
	return client.DeleteAnnouncement(ctx, in, opts...)
}
