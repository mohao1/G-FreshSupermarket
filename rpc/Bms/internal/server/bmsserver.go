// Code generated by goctl. DO NOT EDIT.
// Source: Bms.proto

package server

import (
	"context"

	"DP/rpc/Bms/internal/logic"
	"DP/rpc/Bms/internal/svc"
	"DP/rpc/Bms/pb/bms"
)

type BmsServer struct {
	svcCtx *svc.ServiceContext
	bms.UnimplementedBmsServer
}

func NewBmsServer(svcCtx *svc.ServiceContext) *BmsServer {
	return &BmsServer{
		svcCtx: svcCtx,
	}
}

// ManageLogin-商户管理员的登录
func (s *BmsServer) ManageLogin(ctx context.Context, in *bms.ManageLoginReq) (*bms.ManageLoginResp, error) {
	l := logic.NewManageLoginLogic(ctx, s.svcCtx)
	return l.ManageLogin(in)
}

// StaffLogin-普通员工登录
func (s *BmsServer) StaffLogin(ctx context.Context, in *bms.StaffLoginReq) (*bms.StaffLoginResp, error) {
	l := logic.NewStaffLoginLogic(ctx, s.svcCtx)
	return l.StaffLogin(in)
}

// 获取个人信息
func (s *BmsServer) PersonalInfo(ctx context.Context, in *bms.PersonalInfoReq) (*bms.PersonalInfoResp, error) {
	l := logic.NewPersonalInfoLogic(ctx, s.svcCtx)
	return l.PersonalInfo(in)
}

// 获取身份列表
func (s *BmsServer) GetPositionList(ctx context.Context, in *bms.GetPositionListReq) (*bms.GetPositionListResp, error) {
	l := logic.NewGetPositionListLogic(ctx, s.svcCtx)
	return l.GetPositionList(in)
}

// 获取员工列表
func (s *BmsServer) GetEmployeeList(ctx context.Context, in *bms.GetEmployeeListReq) (*bms.GetEmployeeListResp, error) {
	l := logic.NewGetEmployeeListLogic(ctx, s.svcCtx)
	return l.GetEmployeeList(in)
}

// 设置员工
func (s *BmsServer) SetEmployee(ctx context.Context, in *bms.SetEmployeeReq) (*bms.SetEmployeeResp, error) {
	l := logic.NewSetEmployeeLogic(ctx, s.svcCtx)
	return l.SetEmployee(in)
}

// 删除员工
func (s *BmsServer) DeleteEmployee(ctx context.Context, in *bms.DeleteEmployeeReq) (*bms.DeleteEmployeeResp, error) {
	l := logic.NewDeleteEmployeeLogic(ctx, s.svcCtx)
	return l.DeleteEmployee(in)
}

// 修改员工信息
func (s *BmsServer) UpDateEmployee(ctx context.Context, in *bms.UpDateEmployeeReq) (*bms.UpDateEmployeeResp, error) {
	l := logic.NewUpDateEmployeeLogic(ctx, s.svcCtx)
	return l.UpDateEmployee(in)
}

// 查看未接订单
func (s *BmsServer) GetUnreceivedOrder(ctx context.Context, in *bms.UnreceivedOrderReq) (*bms.UnreceivedOrderResp, error) {
	l := logic.NewGetUnreceivedOrderLogic(ctx, s.svcCtx)
	return l.GetUnreceivedOrder(in)
}

// 接单
func (s *BmsServer) ReceivingOrder(ctx context.Context, in *bms.ReceivingOrderReq) (*bms.ReceivingOrderResp, error) {
	l := logic.NewReceivingOrderLogic(ctx, s.svcCtx)
	return l.ReceivingOrder(in)
}

// 取消接单
func (s *BmsServer) UnReceivingOrder(ctx context.Context, in *bms.UnReceivingOrderReq) (*bms.UnReceivingOrderResp, error) {
	l := logic.NewUnReceivingOrderLogic(ctx, s.svcCtx)
	return l.UnReceivingOrder(in)
}

// 查看已接订单
func (s *BmsServer) GetReceivedOrder(ctx context.Context, in *bms.ReceivedOrderReq) (*bms.ReceivedOrderResp, error) {
	l := logic.NewGetReceivedOrderLogic(ctx, s.svcCtx)
	return l.GetReceivedOrder(in)
}

// 查看完成订单
func (s *BmsServer) GetCompleteOrder(ctx context.Context, in *bms.CompleteOrderReq) (*bms.CompleteOrderResp, error) {
	l := logic.NewGetCompleteOrderLogic(ctx, s.svcCtx)
	return l.GetCompleteOrder(in)
}

// 查看订单详情
func (s *BmsServer) GetOrderDetails(ctx context.Context, in *bms.OrderDetailsReq) (*bms.OrderDetailsResp, error) {
	l := logic.NewGetOrderDetailsLogic(ctx, s.svcCtx)
	return l.GetOrderDetails(in)
}

// 获取商品类型列表
func (s *BmsServer) GetProductTypeList(ctx context.Context, in *bms.GetProductTypeListReq) (*bms.GetProductTypeListResp, error) {
	l := logic.NewGetProductTypeListLogic(ctx, s.svcCtx)
	return l.GetProductTypeList(in)
}

// 查看普通商品列表
func (s *BmsServer) GetProductList(ctx context.Context, in *bms.GetProductListReq) (*bms.GetProductListResp, error) {
	l := logic.NewGetProductListLogic(ctx, s.svcCtx)
	return l.GetProductList(in)
}

// 查看商品详细情况
func (s *BmsServer) GetProductDetails(ctx context.Context, in *bms.GetProductDetailsReq) (*bms.GetProductDetailsResp, error) {
	l := logic.NewGetProductDetailsLogic(ctx, s.svcCtx)
	return l.GetProductDetails(in)
}

// 设置发布普通商品
func (s *BmsServer) ReleaseProduct(ctx context.Context, in *bms.ReleaseProductReq) (*bms.ReleaseProductResp, error) {
	l := logic.NewReleaseProductLogic(ctx, s.svcCtx)
	return l.ReleaseProduct(in)
}

// 修改发布普通商品
func (s *BmsServer) UpDateProduct(ctx context.Context, in *bms.UpDateProductReq) (*bms.UpDateProductResp, error) {
	l := logic.NewUpDateProductLogic(ctx, s.svcCtx)
	return l.UpDateProduct(in)
}

// 删除发布普通商品
func (s *BmsServer) DeleteProduct(ctx context.Context, in *bms.DeleteProductReq) (*bms.DeleteProductResp, error) {
	l := logic.NewDeleteProductLogic(ctx, s.svcCtx)
	return l.DeleteProduct(in)
}

// 查看折扣商品列表
func (s *BmsServer) GetLowProduct(ctx context.Context, in *bms.GetLowProductReq) (*bms.GetLowProductResp, error) {
	l := logic.NewGetLowProductLogic(ctx, s.svcCtx)
	return l.GetLowProduct(in)
}

// 查看商品详细情况
func (s *BmsServer) GetLowProductDetails(ctx context.Context, in *bms.GetLowProductDetailsReq) (*bms.GetLowProductDetailsResp, error) {
	l := logic.NewGetLowProductDetailsLogic(ctx, s.svcCtx)
	return l.GetLowProductDetails(in)
}

// 设置发布折扣商品
func (s *BmsServer) ReleaseLowProduct(ctx context.Context, in *bms.ReleaseLowProductReq) (*bms.ReleaseLowProductResp, error) {
	l := logic.NewReleaseLowProductLogic(ctx, s.svcCtx)
	return l.ReleaseLowProduct(in)
}

// 修改发布折扣商品
func (s *BmsServer) UpDateLowProduct(ctx context.Context, in *bms.UpDateLowProductReq) (*bms.UpDateLowProductResp, error) {
	l := logic.NewUpDateLowProductLogic(ctx, s.svcCtx)
	return l.UpDateLowProduct(in)
}

// 删除发布折扣商品
func (s *BmsServer) DeleteLowProduct(ctx context.Context, in *bms.DeleteLowProductReq) (*bms.DeleteLowProductResp, error) {
	l := logic.NewDeleteLowProductLogic(ctx, s.svcCtx)
	return l.DeleteLowProduct(in)
}

// 获取申请取消的订单列表
func (s *BmsServer) GetOverOrder(ctx context.Context, in *bms.OverOrderListReq) (*bms.OverOrderListResp, error) {
	l := logic.NewGetOverOrderLogic(ctx, s.svcCtx)
	return l.GetOverOrder(in)
}

// 取消订单申请处理
func (s *BmsServer) OverOrderHandle(ctx context.Context, in *bms.OverOrderHandleReq) (*bms.OverOrderHandleResp, error) {
	l := logic.NewOverOrderHandleLogic(ctx, s.svcCtx)
	return l.OverOrderHandle(in)
}

// 查看销售数据
func (s *BmsServer) GetSalesData(ctx context.Context, in *bms.SalesDataListReq) (*bms.SalesDataListResp, error) {
	l := logic.NewGetSalesDataLogic(ctx, s.svcCtx)
	return l.GetSalesData(in)
}

// 查看订单数据
func (s *BmsServer) GetOrderData(ctx context.Context, in *bms.OrderDataReq) (*bms.OrderDataResp, error) {
	l := logic.NewGetOrderDataLogic(ctx, s.svcCtx)
	return l.GetOrderData(in)
}

// 发布公告
func (s *BmsServer) PostAnnouncement(ctx context.Context, in *bms.AnnouncementReq) (*bms.AnnouncementResp, error) {
	l := logic.NewPostAnnouncementLogic(ctx, s.svcCtx)
	return l.PostAnnouncement(in)
}

// 获取公告列表
func (s *BmsServer) GetAnnouncementList(ctx context.Context, in *bms.AnnouncementListReq) (*bms.AnnouncementListResp, error) {
	l := logic.NewGetAnnouncementListLogic(ctx, s.svcCtx)
	return l.GetAnnouncementList(in)
}

// 更新公告
func (s *BmsServer) UpdateAnnouncement(ctx context.Context, in *bms.UpdateAnnouncementReq) (*bms.UpdateAnnouncementResp, error) {
	l := logic.NewUpdateAnnouncementLogic(ctx, s.svcCtx)
	return l.UpdateAnnouncement(in)
}

// 删除公告
func (s *BmsServer) DeleteAnnouncement(ctx context.Context, in *bms.DeleteAnnouncementReq) (*bms.DeleteAnnouncementResp, error) {
	l := logic.NewDeleteAnnouncementLogic(ctx, s.svcCtx)
	return l.DeleteAnnouncement(in)
}
