// Code generated by goctl. DO NOT EDIT.
// Source: Sms.proto

package smsclient

import (
	"context"

	"DP/rpc/Sms/pb/sms"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Announcement         = sms.Announcement
	AnnouncementListReq  = sms.AnnouncementListReq
	AnnouncementListResp = sms.AnnouncementListResp
	ConfirmOrderReq      = sms.ConfirmOrderReq
	ConfirmOrderResp     = sms.ConfirmOrderResp
	DetailedOrderReq     = sms.DetailedOrderReq
	DetailedOrderResp    = sms.DetailedOrderResp
	DetailedProductReq   = sms.DetailedProductReq
	DetailedProductResp  = sms.DetailedProductResp
	GetOrder             = sms.GetOrder
	GetOrderListReq      = sms.GetOrderListReq
	GetOrderListResp     = sms.GetOrderListResp
	GetShopReq           = sms.GetShopReq
	GetShopResp          = sms.GetShopResp
	GetTotalPriceReq     = sms.GetTotalPriceReq
	GetTotalPriceResp    = sms.GetTotalPriceResp
	LoginReq             = sms.LoginReq
	LoginResp            = sms.LoginResp
	LowProduct           = sms.LowProduct
	LowProductListReq    = sms.LowProductListReq
	LowProductListResp   = sms.LowProductListResp
	OrderProduct         = sms.OrderProduct
	OverOrderReq         = sms.OverOrderReq
	OverOrderResp        = sms.OverOrderResp
	PostOrderReq         = sms.PostOrderReq
	PostOrderResp        = sms.PostOrderResp
	Product              = sms.Product
	ProductListReq       = sms.ProductListReq
	ProductListResp      = sms.ProductListResp
	RegisterReq          = sms.RegisterReq
	RegisterResp         = sms.RegisterResp
	Shop                 = sms.Shop
	UserInfoReq          = sms.UserInfoReq
	UserInfoResp         = sms.UserInfoResp

	Sms interface {
		// 注册
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		// 登录
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		// 获取店铺
		GetShop(ctx context.Context, in *GetShopReq, opts ...grpc.CallOption) (*GetShopResp, error)
		// 获取商品列表根据商品类型
		GetProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListResp, error)
		// 获取折扣商品列表根据商品类型
		GetLowProductList(ctx context.Context, in *LowProductListReq, opts ...grpc.CallOption) (*LowProductListResp, error)
		// 获取详细商品信息
		GetDetailedProduct(ctx context.Context, in *DetailedProductReq, opts ...grpc.CallOption) (*DetailedProductResp, error)
		// 计算总价
		GetTotalPrice(ctx context.Context, in *GetTotalPriceReq, opts ...grpc.CallOption) (*GetTotalPriceResp, error)
		// 下单
		PostOrder(ctx context.Context, in *PostOrderReq, opts ...grpc.CallOption) (*PostOrderResp, error)
		// 获取订单列表
		GetOrderList(ctx context.Context, in *GetOrderListReq, opts ...grpc.CallOption) (*GetOrderListResp, error)
		// 查看订单详细信息
		GetDetailedOrder(ctx context.Context, in *DetailedOrderReq, opts ...grpc.CallOption) (*DetailedOrderResp, error)
		// 取消订单
		OverOrder(ctx context.Context, in *ConfirmOrderReq, opts ...grpc.CallOption) (*ConfirmOrderResp, error)
		// 取消申请
		CancellationOverOrder(ctx context.Context, in *ConfirmOrderReq, opts ...grpc.CallOption) (*ConfirmOrderResp, error)
		// 确认订单
		ConfirmOrder(ctx context.Context, in *ConfirmOrderReq, opts ...grpc.CallOption) (*ConfirmOrderResp, error)
		// 获取对应的店铺的公告列表
		GetAnnouncementList(ctx context.Context, in *AnnouncementListReq, opts ...grpc.CallOption) (*AnnouncementListResp, error)
		// 获取个人信息
		GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	}

	defaultSms struct {
		cli zrpc.Client
	}
)

func NewSms(cli zrpc.Client) Sms {
	return &defaultSms{
		cli: cli,
	}
}

// 注册
func (m *defaultSms) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// 登录
func (m *defaultSms) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

// 获取店铺
func (m *defaultSms) GetShop(ctx context.Context, in *GetShopReq, opts ...grpc.CallOption) (*GetShopResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetShop(ctx, in, opts...)
}

// 获取商品列表根据商品类型
func (m *defaultSms) GetProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetProductList(ctx, in, opts...)
}

// 获取折扣商品列表根据商品类型
func (m *defaultSms) GetLowProductList(ctx context.Context, in *LowProductListReq, opts ...grpc.CallOption) (*LowProductListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetLowProductList(ctx, in, opts...)
}

// 获取详细商品信息
func (m *defaultSms) GetDetailedProduct(ctx context.Context, in *DetailedProductReq, opts ...grpc.CallOption) (*DetailedProductResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetDetailedProduct(ctx, in, opts...)
}

// 计算总价
func (m *defaultSms) GetTotalPrice(ctx context.Context, in *GetTotalPriceReq, opts ...grpc.CallOption) (*GetTotalPriceResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetTotalPrice(ctx, in, opts...)
}

// 下单
func (m *defaultSms) PostOrder(ctx context.Context, in *PostOrderReq, opts ...grpc.CallOption) (*PostOrderResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.PostOrder(ctx, in, opts...)
}

// 获取订单列表
func (m *defaultSms) GetOrderList(ctx context.Context, in *GetOrderListReq, opts ...grpc.CallOption) (*GetOrderListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetOrderList(ctx, in, opts...)
}

// 查看订单详细信息
func (m *defaultSms) GetDetailedOrder(ctx context.Context, in *DetailedOrderReq, opts ...grpc.CallOption) (*DetailedOrderResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetDetailedOrder(ctx, in, opts...)
}

// 取消订单
func (m *defaultSms) OverOrder(ctx context.Context, in *ConfirmOrderReq, opts ...grpc.CallOption) (*ConfirmOrderResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.OverOrder(ctx, in, opts...)
}

// 取消申请
func (m *defaultSms) CancellationOverOrder(ctx context.Context, in *ConfirmOrderReq, opts ...grpc.CallOption) (*ConfirmOrderResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.CancellationOverOrder(ctx, in, opts...)
}

// 确认订单
func (m *defaultSms) ConfirmOrder(ctx context.Context, in *ConfirmOrderReq, opts ...grpc.CallOption) (*ConfirmOrderResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.ConfirmOrder(ctx, in, opts...)
}

// 获取对应的店铺的公告列表
func (m *defaultSms) GetAnnouncementList(ctx context.Context, in *AnnouncementListReq, opts ...grpc.CallOption) (*AnnouncementListResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetAnnouncementList(ctx, in, opts...)
}

// 获取个人信息
func (m *defaultSms) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	client := sms.NewSmsClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}
