// Code generated by goctl. DO NOT EDIT.
// Source: Ams.proto

package server

import (
	"context"

	"DP/rpc/Ams/internal/logic"
	"DP/rpc/Ams/internal/svc"
	"DP/rpc/Ams/pb/ams"
)

type AmsServer struct {
	svcCtx *svc.ServiceContext
	ams.UnimplementedAmsServer
}

func NewAmsServer(svcCtx *svc.ServiceContext) *AmsServer {
	return &AmsServer{
		svcCtx: svcCtx,
	}
}

// 系统管理人员登录
func (s *AmsServer) AdminLogin(ctx context.Context, in *ams.AdminLoginReq) (*ams.AdminLoginResp, error) {
	l := logic.NewAdminLoginLogic(ctx, s.svcCtx)
	return l.AdminLogin(in)
}

// 修改密码
func (s *AmsServer) AdminUpdateLoginPassWord(ctx context.Context, in *ams.UpdateLoginPassWordReq) (*ams.UpdateLoginPassWordResp, error) {
	l := logic.NewAdminUpdateLoginPassWordLogic(ctx, s.svcCtx)
	return l.AdminUpdateLoginPassWord(in)
}

// 获取店铺列表
func (s *AmsServer) GetShopList(ctx context.Context, in *ams.GetShopListReq) (*ams.GetShopListResp, error) {
	l := logic.NewGetShopListLogic(ctx, s.svcCtx)
	return l.GetShopList(in)
}

// 店铺信息添加
func (s *AmsServer) PostShop(ctx context.Context, in *ams.PostShopReq) (*ams.PostShopResp, error) {
	l := logic.NewPostShopLogic(ctx, s.svcCtx)
	return l.PostShop(in)
}

// 创建管理账号
func (s *AmsServer) PostAdmin(ctx context.Context, in *ams.PostAdminReq) (*ams.PostAdminResp, error) {
	l := logic.NewPostAdminLogic(ctx, s.svcCtx)
	return l.PostAdmin(in)
}

// 查看可用管理账号
func (s *AmsServer) GetAdmin(ctx context.Context, in *ams.GetAdminReq) (*ams.GetAdminResp, error) {
	l := logic.NewGetAdminLogic(ctx, s.svcCtx)
	return l.GetAdmin(in)
}

// 删除可用管理账号
func (s *AmsServer) DeleteAdmin(ctx context.Context, in *ams.DeleteAdminReq) (*ams.DeleteAdminResp, error) {
	l := logic.NewDeleteAdminLogic(ctx, s.svcCtx)
	return l.DeleteAdmin(in)
}

// 设置店铺的管理员
func (s *AmsServer) PostShopAdmin(ctx context.Context, in *ams.PostShopAdminReq) (*ams.PostShopAdminResp, error) {
	l := logic.NewPostShopAdminLogic(ctx, s.svcCtx)
	return l.PostShopAdmin(in)
}

// 删除店铺的管理员
func (s *AmsServer) DeleteShopAdmin(ctx context.Context, in *ams.DeleteShopAdminReq) (*ams.DeleteShopAdminResp, error) {
	l := logic.NewDeleteShopAdminLogic(ctx, s.svcCtx)
	return l.DeleteShopAdmin(in)
}

// 查看店铺的管理员
func (s *AmsServer) GetShopAdmin(ctx context.Context, in *ams.GetShopAdminReq) (*ams.GetShopAdminResp, error) {
	l := logic.NewGetShopAdminLogic(ctx, s.svcCtx)
	return l.GetShopAdmin(in)
}

// 店铺信息修改
func (s *AmsServer) UpDateShop(ctx context.Context, in *ams.UpDateShopReq) (*ams.UpDateShopResp, error) {
	l := logic.NewUpDateShopLogic(ctx, s.svcCtx)
	return l.UpDateShop(in)
}

// 删除店铺
func (s *AmsServer) DeleteShop(ctx context.Context, in *ams.DeleteShopReq) (*ams.DeleteShopResp, error) {
	l := logic.NewDeleteShopLogic(ctx, s.svcCtx)
	return l.DeleteShop(in)
}

// 获取商品类型列表
func (s *AmsServer) GetProductTypeList(ctx context.Context, in *ams.GetProductTypeListReq) (*ams.GetProductTypeListResp, error) {
	l := logic.NewGetProductTypeListLogic(ctx, s.svcCtx)
	return l.GetProductTypeList(in)
}

// 设置商品类型
func (s *AmsServer) PostProductType(ctx context.Context, in *ams.PostProductTypeReq) (*ams.PostProductTypeResp, error) {
	l := logic.NewPostProductTypeLogic(ctx, s.svcCtx)
	return l.PostProductType(in)
}

// 修改商品类型
func (s *AmsServer) UpDateProductType(ctx context.Context, in *ams.UpDateProductTypeReq) (*ams.UpDateProductTypeResp, error) {
	l := logic.NewUpDateProductTypeLogic(ctx, s.svcCtx)
	return l.UpDateProductType(in)
}

// 删除商品类型
func (s *AmsServer) DeleteProductType(ctx context.Context, in *ams.DeleteProductTypeReq) (*ams.DeleteProductTypeResp, error) {
	l := logic.NewDeleteProductTypeLogic(ctx, s.svcCtx)
	return l.DeleteProductType(in)
}

// 查看全部店铺员工列表
func (s *AmsServer) GetAllShopStaffList(ctx context.Context, in *ams.GetAllShopStaffListReq) (*ams.GetAllShopStaffListResp, error) {
	l := logic.NewGetAllShopStaffListLogic(ctx, s.svcCtx)
	return l.GetAllShopStaffList(in)
}

// 店铺查询人员列表
func (s *AmsServer) GetShopStaffList(ctx context.Context, in *ams.GetShopStaffListReq) (*ams.GetShopStaffListResp, error) {
	l := logic.NewGetShopStaffListLogic(ctx, s.svcCtx)
	return l.GetShopStaffList(in)
}

// 各个门店人数统计
func (s *AmsServer) GetShopAllStaffSumList(ctx context.Context, in *ams.GetShopAllStaffSumListReq) (*ams.GetShopAllStaffSumListResp, error) {
	l := logic.NewGetShopAllStaffSumListLogic(ctx, s.svcCtx)
	return l.GetShopAllStaffSumList(in)
}

// 用户信息列表
func (s *AmsServer) GetUserList(ctx context.Context, in *ams.GetUserListReq) (*ams.GetUserListResp, error) {
	l := logic.NewGetUserListLogic(ctx, s.svcCtx)
	return l.GetUserList(in)
}

// 身份信息列表查看
func (s *AmsServer) GetPositionList(ctx context.Context, in *ams.GetPositionListReq) (*ams.GetPositionListResp, error) {
	l := logic.NewGetPositionListLogic(ctx, s.svcCtx)
	return l.GetPositionList(in)
}

// 身份信息设置
func (s *AmsServer) PostPosition(ctx context.Context, in *ams.PostPositionReq) (*ams.PostPositionResp, error) {
	l := logic.NewPostPositionLogic(ctx, s.svcCtx)
	return l.PostPosition(in)
}

// 身份信息修改
func (s *AmsServer) UpDatePosition(ctx context.Context, in *ams.UpDatePositionReq) (*ams.UpDatePositionResp, error) {
	l := logic.NewUpDatePositionLogic(ctx, s.svcCtx)
	return l.UpDatePosition(in)
}

// 身份信息删除
func (s *AmsServer) DeletePosition(ctx context.Context, in *ams.DeletePositionReq) (*ams.DeletePositionResp, error) {
	l := logic.NewDeletePositionLogic(ctx, s.svcCtx)
	return l.DeletePosition(in)
}
