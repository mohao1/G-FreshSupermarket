// Code generated by goctl. DO NOT EDIT.
// Source: Ams.proto

package amsclient

import (
	"context"

	"DP/rpc/Ams/pb/ams"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AdminLoginReq              = ams.AdminLoginReq
	AdminLoginResp             = ams.AdminLoginResp
	DeleteAdminReq             = ams.DeleteAdminReq
	DeleteAdminResp            = ams.DeleteAdminResp
	DeletePositionReq          = ams.DeletePositionReq
	DeletePositionResp         = ams.DeletePositionResp
	DeleteProductTypeReq       = ams.DeleteProductTypeReq
	DeleteProductTypeResp      = ams.DeleteProductTypeResp
	DeleteShopAdminReq         = ams.DeleteShopAdminReq
	DeleteShopAdminResp        = ams.DeleteShopAdminResp
	DeleteShopReq              = ams.DeleteShopReq
	DeleteShopResp             = ams.DeleteShopResp
	GetAdminReq                = ams.GetAdminReq
	GetAdminResp               = ams.GetAdminResp
	GetAllShopStaffListReq     = ams.GetAllShopStaffListReq
	GetAllShopStaffListResp    = ams.GetAllShopStaffListResp
	GetPositionListReq         = ams.GetPositionListReq
	GetPositionListResp        = ams.GetPositionListResp
	GetProductTypeListReq      = ams.GetProductTypeListReq
	GetProductTypeListResp     = ams.GetProductTypeListResp
	GetShopAdminReq            = ams.GetShopAdminReq
	GetShopAdminResp           = ams.GetShopAdminResp
	GetShopAllStaffSumListReq  = ams.GetShopAllStaffSumListReq
	GetShopAllStaffSumListResp = ams.GetShopAllStaffSumListResp
	GetShopListReq             = ams.GetShopListReq
	GetShopListResp            = ams.GetShopListResp
	GetShopStaffListReq        = ams.GetShopStaffListReq
	GetShopStaffListResp       = ams.GetShopStaffListResp
	GetUserListReq             = ams.GetUserListReq
	GetUserListResp            = ams.GetUserListResp
	PositionData               = ams.PositionData
	PostAdminReq               = ams.PostAdminReq
	PostAdminResp              = ams.PostAdminResp
	PostPositionReq            = ams.PostPositionReq
	PostPositionResp           = ams.PostPositionResp
	PostProductTypeReq         = ams.PostProductTypeReq
	PostProductTypeResp        = ams.PostProductTypeResp
	PostShopAdminReq           = ams.PostShopAdminReq
	PostShopAdminResp          = ams.PostShopAdminResp
	PostShopReq                = ams.PostShopReq
	PostShopResp               = ams.PostShopResp
	ProductType                = ams.ProductType
	Shop                       = ams.Shop
	ShopAdmin                  = ams.ShopAdmin
	Staff                      = ams.Staff
	StaffSum                   = ams.StaffSum
	UpDatePositionReq          = ams.UpDatePositionReq
	UpDatePositionResp         = ams.UpDatePositionResp
	UpDateProductTypeReq       = ams.UpDateProductTypeReq
	UpDateProductTypeResp      = ams.UpDateProductTypeResp
	UpDateShopReq              = ams.UpDateShopReq
	UpDateShopResp             = ams.UpDateShopResp
	UpdateLoginPassWordReq     = ams.UpdateLoginPassWordReq
	UpdateLoginPassWordResp    = ams.UpdateLoginPassWordResp
	UserData                   = ams.UserData

	Ams interface {
		// 系统管理人员登录
		AdminLogin(ctx context.Context, in *AdminLoginReq, opts ...grpc.CallOption) (*AdminLoginResp, error)
		// 修改密码
		AdminUpdateLoginPassWord(ctx context.Context, in *UpdateLoginPassWordReq, opts ...grpc.CallOption) (*UpdateLoginPassWordResp, error)
		// 获取店铺列表
		GetShopList(ctx context.Context, in *GetShopListReq, opts ...grpc.CallOption) (*GetShopListResp, error)
		// 店铺信息添加
		PostShop(ctx context.Context, in *PostShopReq, opts ...grpc.CallOption) (*PostShopResp, error)
		// 创建管理账号
		PostAdmin(ctx context.Context, in *PostAdminReq, opts ...grpc.CallOption) (*PostAdminResp, error)
		// 查看可用管理账号
		GetAdmin(ctx context.Context, in *GetAdminReq, opts ...grpc.CallOption) (*GetAdminResp, error)
		// 删除可用管理账号
		DeleteAdmin(ctx context.Context, in *DeleteAdminReq, opts ...grpc.CallOption) (*DeleteAdminResp, error)
		// 设置店铺的管理员
		PostShopAdmin(ctx context.Context, in *PostShopAdminReq, opts ...grpc.CallOption) (*PostShopAdminResp, error)
		// 删除店铺的管理员
		DeleteShopAdmin(ctx context.Context, in *DeleteShopAdminReq, opts ...grpc.CallOption) (*DeleteShopAdminResp, error)
		// 查看店铺的管理员
		GetShopAdmin(ctx context.Context, in *GetShopAdminReq, opts ...grpc.CallOption) (*GetShopAdminResp, error)
		// 店铺信息修改
		UpDateShop(ctx context.Context, in *UpDateShopReq, opts ...grpc.CallOption) (*UpDateShopResp, error)
		// 删除店铺
		DeleteShop(ctx context.Context, in *DeleteShopReq, opts ...grpc.CallOption) (*DeleteShopResp, error)
		// 获取商品类型列表
		GetProductTypeList(ctx context.Context, in *GetProductTypeListReq, opts ...grpc.CallOption) (*GetProductTypeListResp, error)
		// 设置商品类型
		PostProductType(ctx context.Context, in *PostProductTypeReq, opts ...grpc.CallOption) (*PostProductTypeResp, error)
		// 修改商品类型
		UpDateProductType(ctx context.Context, in *UpDateProductTypeReq, opts ...grpc.CallOption) (*UpDateProductTypeResp, error)
		// 删除商品类型
		DeleteProductType(ctx context.Context, in *DeleteProductTypeReq, opts ...grpc.CallOption) (*DeleteProductTypeResp, error)
		// 查看全部店铺员工列表
		GetAllShopStaffList(ctx context.Context, in *GetAllShopStaffListReq, opts ...grpc.CallOption) (*GetAllShopStaffListResp, error)
		// 店铺查询人员列表
		GetShopStaffList(ctx context.Context, in *GetShopStaffListReq, opts ...grpc.CallOption) (*GetShopStaffListResp, error)
		// 各个门店人数统计
		GetShopAllStaffSumList(ctx context.Context, in *GetShopAllStaffSumListReq, opts ...grpc.CallOption) (*GetShopAllStaffSumListResp, error)
		// 用户信息列表
		GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error)
		// 身份信息列表查看
		GetPositionList(ctx context.Context, in *GetPositionListReq, opts ...grpc.CallOption) (*GetPositionListResp, error)
		// 身份信息设置
		PostPosition(ctx context.Context, in *PostPositionReq, opts ...grpc.CallOption) (*PostPositionResp, error)
		// 身份信息修改
		UpDatePosition(ctx context.Context, in *UpDatePositionReq, opts ...grpc.CallOption) (*UpDatePositionResp, error)
		// 身份信息删除
		DeletePosition(ctx context.Context, in *DeletePositionReq, opts ...grpc.CallOption) (*DeletePositionResp, error)
	}

	defaultAms struct {
		cli zrpc.Client
	}
)

func NewAms(cli zrpc.Client) Ams {
	return &defaultAms{
		cli: cli,
	}
}

// 系统管理人员登录
func (m *defaultAms) AdminLogin(ctx context.Context, in *AdminLoginReq, opts ...grpc.CallOption) (*AdminLoginResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.AdminLogin(ctx, in, opts...)
}

// 修改密码
func (m *defaultAms) AdminUpdateLoginPassWord(ctx context.Context, in *UpdateLoginPassWordReq, opts ...grpc.CallOption) (*UpdateLoginPassWordResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.AdminUpdateLoginPassWord(ctx, in, opts...)
}

// 获取店铺列表
func (m *defaultAms) GetShopList(ctx context.Context, in *GetShopListReq, opts ...grpc.CallOption) (*GetShopListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopList(ctx, in, opts...)
}

// 店铺信息添加
func (m *defaultAms) PostShop(ctx context.Context, in *PostShopReq, opts ...grpc.CallOption) (*PostShopResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostShop(ctx, in, opts...)
}

// 创建管理账号
func (m *defaultAms) PostAdmin(ctx context.Context, in *PostAdminReq, opts ...grpc.CallOption) (*PostAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostAdmin(ctx, in, opts...)
}

// 查看可用管理账号
func (m *defaultAms) GetAdmin(ctx context.Context, in *GetAdminReq, opts ...grpc.CallOption) (*GetAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetAdmin(ctx, in, opts...)
}

// 删除可用管理账号
func (m *defaultAms) DeleteAdmin(ctx context.Context, in *DeleteAdminReq, opts ...grpc.CallOption) (*DeleteAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteAdmin(ctx, in, opts...)
}

// 设置店铺的管理员
func (m *defaultAms) PostShopAdmin(ctx context.Context, in *PostShopAdminReq, opts ...grpc.CallOption) (*PostShopAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostShopAdmin(ctx, in, opts...)
}

// 删除店铺的管理员
func (m *defaultAms) DeleteShopAdmin(ctx context.Context, in *DeleteShopAdminReq, opts ...grpc.CallOption) (*DeleteShopAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteShopAdmin(ctx, in, opts...)
}

// 查看店铺的管理员
func (m *defaultAms) GetShopAdmin(ctx context.Context, in *GetShopAdminReq, opts ...grpc.CallOption) (*GetShopAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopAdmin(ctx, in, opts...)
}

// 店铺信息修改
func (m *defaultAms) UpDateShop(ctx context.Context, in *UpDateShopReq, opts ...grpc.CallOption) (*UpDateShopResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.UpDateShop(ctx, in, opts...)
}

// 删除店铺
func (m *defaultAms) DeleteShop(ctx context.Context, in *DeleteShopReq, opts ...grpc.CallOption) (*DeleteShopResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteShop(ctx, in, opts...)
}

// 获取商品类型列表
func (m *defaultAms) GetProductTypeList(ctx context.Context, in *GetProductTypeListReq, opts ...grpc.CallOption) (*GetProductTypeListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetProductTypeList(ctx, in, opts...)
}

// 设置商品类型
func (m *defaultAms) PostProductType(ctx context.Context, in *PostProductTypeReq, opts ...grpc.CallOption) (*PostProductTypeResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostProductType(ctx, in, opts...)
}

// 修改商品类型
func (m *defaultAms) UpDateProductType(ctx context.Context, in *UpDateProductTypeReq, opts ...grpc.CallOption) (*UpDateProductTypeResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.UpDateProductType(ctx, in, opts...)
}

// 删除商品类型
func (m *defaultAms) DeleteProductType(ctx context.Context, in *DeleteProductTypeReq, opts ...grpc.CallOption) (*DeleteProductTypeResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteProductType(ctx, in, opts...)
}

// 查看全部店铺员工列表
func (m *defaultAms) GetAllShopStaffList(ctx context.Context, in *GetAllShopStaffListReq, opts ...grpc.CallOption) (*GetAllShopStaffListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetAllShopStaffList(ctx, in, opts...)
}

// 店铺查询人员列表
func (m *defaultAms) GetShopStaffList(ctx context.Context, in *GetShopStaffListReq, opts ...grpc.CallOption) (*GetShopStaffListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopStaffList(ctx, in, opts...)
}

// 各个门店人数统计
func (m *defaultAms) GetShopAllStaffSumList(ctx context.Context, in *GetShopAllStaffSumListReq, opts ...grpc.CallOption) (*GetShopAllStaffSumListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopAllStaffSumList(ctx, in, opts...)
}

// 用户信息列表
func (m *defaultAms) GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetUserList(ctx, in, opts...)
}

// 身份信息列表查看
func (m *defaultAms) GetPositionList(ctx context.Context, in *GetPositionListReq, opts ...grpc.CallOption) (*GetPositionListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetPositionList(ctx, in, opts...)
}

// 身份信息设置
func (m *defaultAms) PostPosition(ctx context.Context, in *PostPositionReq, opts ...grpc.CallOption) (*PostPositionResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostPosition(ctx, in, opts...)
}

// 身份信息修改
func (m *defaultAms) UpDatePosition(ctx context.Context, in *UpDatePositionReq, opts ...grpc.CallOption) (*UpDatePositionResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.UpDatePosition(ctx, in, opts...)
}

// 身份信息删除
func (m *defaultAms) DeletePosition(ctx context.Context, in *DeletePositionReq, opts ...grpc.CallOption) (*DeletePositionResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeletePosition(ctx, in, opts...)
}
