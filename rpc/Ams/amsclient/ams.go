// Code generated by goctl. DO NOT EDIT.
// Source: Ams.proto

package amsclient

import (
	"context"

	"DP/rpc/Ams/pb/ams"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AdminLoginReq               = ams.AdminLoginReq
	AdminLoginResp              = ams.AdminLoginResp
	DeleteAdminReq              = ams.DeleteAdminReq
	DeleteAdminResp             = ams.DeleteAdminResp
	DeletePositionReq           = ams.DeletePositionReq
	DeletePositionResp          = ams.DeletePositionResp
	DeleteProductTypeReq        = ams.DeleteProductTypeReq
	DeleteProductTypeResp       = ams.DeleteProductTypeResp
	DeleteShopAdminReq          = ams.DeleteShopAdminReq
	DeleteShopAdminResp         = ams.DeleteShopAdminResp
	DeleteShopReq               = ams.DeleteShopReq
	DeleteShopResp              = ams.DeleteShopResp
	GetAdminReq                 = ams.GetAdminReq
	GetAdminResp                = ams.GetAdminResp
	GetAllShopStaffListReq      = ams.GetAllShopStaffListReq
	GetAllShopStaffListResp     = ams.GetAllShopStaffListResp
	GetLowProductSumReq         = ams.GetLowProductSumReq
	GetLowProductSumResp        = ams.GetLowProductSumResp
	GetNewUserSumToDayReq       = ams.GetNewUserSumToDayReq
	GetNewUserSumToDayResp      = ams.GetNewUserSumToDayResp
	GetOrderSumReq              = ams.GetOrderSumReq
	GetOrderSumResp             = ams.GetOrderSumResp
	GetPositionListReq          = ams.GetPositionListReq
	GetPositionListResp         = ams.GetPositionListResp
	GetProductSumReq            = ams.GetProductSumReq
	GetProductSumResp           = ams.GetProductSumResp
	GetProductTypeListReq       = ams.GetProductTypeListReq
	GetProductTypeListResp      = ams.GetProductTypeListResp
	GetShopAdminReq             = ams.GetShopAdminReq
	GetShopAdminResp            = ams.GetShopAdminResp
	GetShopAllStaffSumListReq   = ams.GetShopAllStaffSumListReq
	GetShopAllStaffSumListResp  = ams.GetShopAllStaffSumListResp
	GetShopListReq              = ams.GetShopListReq
	GetShopListResp             = ams.GetShopListResp
	GetShopLowProductListReq    = ams.GetShopLowProductListReq
	GetShopLowProductListResp   = ams.GetShopLowProductListResp
	GetShopLowProductSumReq     = ams.GetShopLowProductSumReq
	GetShopLowProductSumResp    = ams.GetShopLowProductSumResp
	GetShopOrderSumReq          = ams.GetShopOrderSumReq
	GetShopOrderSumResp         = ams.GetShopOrderSumResp
	GetShopProductListReq       = ams.GetShopProductListReq
	GetShopProductListResp      = ams.GetShopProductListResp
	GetShopProductSumReq        = ams.GetShopProductSumReq
	GetShopProductSumResp       = ams.GetShopProductSumResp
	GetShopSalesRecordsListReq  = ams.GetShopSalesRecordsListReq
	GetShopSalesRecordsListResp = ams.GetShopSalesRecordsListResp
	GetShopSalesRecordsSumReq   = ams.GetShopSalesRecordsSumReq
	GetShopSalesRecordsSumResp  = ams.GetShopSalesRecordsSumResp
	GetShopStaffListReq         = ams.GetShopStaffListReq
	GetShopStaffListResp        = ams.GetShopStaffListResp
	GetShopSumReq               = ams.GetShopSumReq
	GetShopSumResp              = ams.GetShopSumResp
	GetShopTimeOrderSumReq      = ams.GetShopTimeOrderSumReq
	GetShopTimeOrderSumResp     = ams.GetShopTimeOrderSumResp
	GetUserListReq              = ams.GetUserListReq
	GetUserListResp             = ams.GetUserListResp
	GetUserSumReq               = ams.GetUserSumReq
	GetUserSumResp              = ams.GetUserSumResp
	PositionData                = ams.PositionData
	PositionDataSc              = ams.PositionDataSc
	PostAdminReq                = ams.PostAdminReq
	PostAdminResp               = ams.PostAdminResp
	PostPositionReq             = ams.PostPositionReq
	PostPositionResp            = ams.PostPositionResp
	PostProductTypeReq          = ams.PostProductTypeReq
	PostProductTypeResp         = ams.PostProductTypeResp
	PostShopAdminReq            = ams.PostShopAdminReq
	PostShopAdminResp           = ams.PostShopAdminResp
	PostShopReq                 = ams.PostShopReq
	PostShopResp                = ams.PostShopResp
	ProductType                 = ams.ProductType
	SalesRecordsSumData         = ams.SalesRecordsSumData
	Shop                        = ams.Shop
	ShopAdmin                   = ams.ShopAdmin
	ShopOrderSumData            = ams.ShopOrderSumData
	ShopTimeOrderData           = ams.ShopTimeOrderData
	Staff                       = ams.Staff
	StaffSum                    = ams.StaffSum
	UpDatePositionReq           = ams.UpDatePositionReq
	UpDatePositionResp          = ams.UpDatePositionResp
	UpDateProductTypeReq        = ams.UpDateProductTypeReq
	UpDateProductTypeResp       = ams.UpDateProductTypeResp
	UpDateShopReq               = ams.UpDateShopReq
	UpDateShopResp              = ams.UpDateShopResp
	UpdateLoginPassWordReq      = ams.UpdateLoginPassWordReq
	UpdateLoginPassWordResp     = ams.UpdateLoginPassWordResp
	UserData                    = ams.UserData

	Ams interface {
		// 系统管理人员登录
		AdminLogin(ctx context.Context, in *AdminLoginReq, opts ...grpc.CallOption) (*AdminLoginResp, error)
		// 修改密码
		AdminUpdateLoginPassWord(ctx context.Context, in *UpdateLoginPassWordReq, opts ...grpc.CallOption) (*UpdateLoginPassWordResp, error)
		// 获取店铺列表
		GetShopList(ctx context.Context, in *GetShopListReq, opts ...grpc.CallOption) (*GetShopListResp, error)
		// 店铺信息添加
		PostShop(ctx context.Context, in *PostShopReq, opts ...grpc.CallOption) (*PostShopResp, error)
		// 创建管理账号
		PostAdmin(ctx context.Context, in *PostAdminReq, opts ...grpc.CallOption) (*PostAdminResp, error)
		// 查看可用管理账号
		GetAdmin(ctx context.Context, in *GetAdminReq, opts ...grpc.CallOption) (*GetAdminResp, error)
		// 删除可用管理账号
		DeleteAdmin(ctx context.Context, in *DeleteAdminReq, opts ...grpc.CallOption) (*DeleteAdminResp, error)
		// 设置店铺的管理员
		PostShopAdmin(ctx context.Context, in *PostShopAdminReq, opts ...grpc.CallOption) (*PostShopAdminResp, error)
		// 删除店铺的管理员
		DeleteShopAdmin(ctx context.Context, in *DeleteShopAdminReq, opts ...grpc.CallOption) (*DeleteShopAdminResp, error)
		// 查看店铺的管理员
		GetShopAdmin(ctx context.Context, in *GetShopAdminReq, opts ...grpc.CallOption) (*GetShopAdminResp, error)
		// 店铺信息修改
		UpDateShop(ctx context.Context, in *UpDateShopReq, opts ...grpc.CallOption) (*UpDateShopResp, error)
		// 删除店铺
		DeleteShop(ctx context.Context, in *DeleteShopReq, opts ...grpc.CallOption) (*DeleteShopResp, error)
		// 获取商品类型列表
		GetProductTypeList(ctx context.Context, in *GetProductTypeListReq, opts ...grpc.CallOption) (*GetProductTypeListResp, error)
		// 设置商品类型
		PostProductType(ctx context.Context, in *PostProductTypeReq, opts ...grpc.CallOption) (*PostProductTypeResp, error)
		// 修改商品类型
		UpDateProductType(ctx context.Context, in *UpDateProductTypeReq, opts ...grpc.CallOption) (*UpDateProductTypeResp, error)
		// 删除商品类型
		DeleteProductType(ctx context.Context, in *DeleteProductTypeReq, opts ...grpc.CallOption) (*DeleteProductTypeResp, error)
		// 查看全部店铺员工列表
		GetAllShopStaffList(ctx context.Context, in *GetAllShopStaffListReq, opts ...grpc.CallOption) (*GetAllShopStaffListResp, error)
		// 店铺查询人员列表
		GetShopStaffList(ctx context.Context, in *GetShopStaffListReq, opts ...grpc.CallOption) (*GetShopStaffListResp, error)
		// 各个门店人数统计
		GetShopAllStaffSumList(ctx context.Context, in *GetShopAllStaffSumListReq, opts ...grpc.CallOption) (*GetShopAllStaffSumListResp, error)
		// 用户信息列表
		GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error)
		// 身份信息列表查看
		GetPositionList(ctx context.Context, in *GetPositionListReq, opts ...grpc.CallOption) (*GetPositionListResp, error)
		// 身份信息设置
		PostPosition(ctx context.Context, in *PostPositionReq, opts ...grpc.CallOption) (*PostPositionResp, error)
		// 身份信息修改
		UpDatePosition(ctx context.Context, in *UpDatePositionReq, opts ...grpc.CallOption) (*UpDatePositionResp, error)
		// 身份信息删除
		DeletePosition(ctx context.Context, in *DeletePositionReq, opts ...grpc.CallOption) (*DeletePositionResp, error)
		// 店铺数量
		GetShopSum(ctx context.Context, in *GetShopSumReq, opts ...grpc.CallOption) (*GetShopSumResp, error)
		// 用户人数
		GetUserSum(ctx context.Context, in *GetUserSumReq, opts ...grpc.CallOption) (*GetUserSumResp, error)
		// 商品模块
		GetShopLowProductList(ctx context.Context, in *GetShopLowProductListReq, opts ...grpc.CallOption) (*GetShopLowProductListResp, error)
		// 进行门店对应折扣商品数量统计
		GetShopLowProductSum(ctx context.Context, in *GetShopLowProductSumReq, opts ...grpc.CallOption) (*GetShopLowProductSumResp, error)
		// 门店普通商品
		GetShopProductList(ctx context.Context, in *GetShopProductListReq, opts ...grpc.CallOption) (*GetShopProductListResp, error)
		// 进行门店对应普通商品数量统计
		GetShopProductSum(ctx context.Context, in *GetShopProductSumReq, opts ...grpc.CallOption) (*GetShopProductSumResp, error)
		// 统计折扣商品总量
		GetLowProductSum(ctx context.Context, in *GetLowProductSumReq, opts ...grpc.CallOption) (*GetLowProductSumResp, error)
		// 统计普通商品总量
		GetProductSum(ctx context.Context, in *GetProductSumReq, opts ...grpc.CallOption) (*GetProductSumResp, error)
		// 销售数据
		GetShopSalesRecordsSum(ctx context.Context, in *GetShopSalesRecordsSumReq, opts ...grpc.CallOption) (*GetShopSalesRecordsSumResp, error)
		// 各个店铺商品总销售的数据列表
		GetShopSalesRecordsList(ctx context.Context, in *GetShopSalesRecordsListReq, opts ...grpc.CallOption) (*GetShopSalesRecordsListResp, error)
		// 各个店铺根据时间段的订单数量
		GetShopTimeOrderSum(ctx context.Context, in *GetShopTimeOrderSumReq, opts ...grpc.CallOption) (*GetShopTimeOrderSumResp, error)
		// 各个店铺总的订单数量
		GetShopOrderSum(ctx context.Context, in *GetShopOrderSumReq, opts ...grpc.CallOption) (*GetShopOrderSumResp, error)
		// 今日消费用户数量
		GetOrderSum(ctx context.Context, in *GetOrderSumReq, opts ...grpc.CallOption) (*GetOrderSumResp, error)
		// 今日新增用户数量
		GetNewUserSumToDay(ctx context.Context, in *GetNewUserSumToDayReq, opts ...grpc.CallOption) (*GetNewUserSumToDayResp, error)
	}

	defaultAms struct {
		cli zrpc.Client
	}
)

func NewAms(cli zrpc.Client) Ams {
	return &defaultAms{
		cli: cli,
	}
}

// 系统管理人员登录
func (m *defaultAms) AdminLogin(ctx context.Context, in *AdminLoginReq, opts ...grpc.CallOption) (*AdminLoginResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.AdminLogin(ctx, in, opts...)
}

// 修改密码
func (m *defaultAms) AdminUpdateLoginPassWord(ctx context.Context, in *UpdateLoginPassWordReq, opts ...grpc.CallOption) (*UpdateLoginPassWordResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.AdminUpdateLoginPassWord(ctx, in, opts...)
}

// 获取店铺列表
func (m *defaultAms) GetShopList(ctx context.Context, in *GetShopListReq, opts ...grpc.CallOption) (*GetShopListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopList(ctx, in, opts...)
}

// 店铺信息添加
func (m *defaultAms) PostShop(ctx context.Context, in *PostShopReq, opts ...grpc.CallOption) (*PostShopResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostShop(ctx, in, opts...)
}

// 创建管理账号
func (m *defaultAms) PostAdmin(ctx context.Context, in *PostAdminReq, opts ...grpc.CallOption) (*PostAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostAdmin(ctx, in, opts...)
}

// 查看可用管理账号
func (m *defaultAms) GetAdmin(ctx context.Context, in *GetAdminReq, opts ...grpc.CallOption) (*GetAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetAdmin(ctx, in, opts...)
}

// 删除可用管理账号
func (m *defaultAms) DeleteAdmin(ctx context.Context, in *DeleteAdminReq, opts ...grpc.CallOption) (*DeleteAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteAdmin(ctx, in, opts...)
}

// 设置店铺的管理员
func (m *defaultAms) PostShopAdmin(ctx context.Context, in *PostShopAdminReq, opts ...grpc.CallOption) (*PostShopAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostShopAdmin(ctx, in, opts...)
}

// 删除店铺的管理员
func (m *defaultAms) DeleteShopAdmin(ctx context.Context, in *DeleteShopAdminReq, opts ...grpc.CallOption) (*DeleteShopAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteShopAdmin(ctx, in, opts...)
}

// 查看店铺的管理员
func (m *defaultAms) GetShopAdmin(ctx context.Context, in *GetShopAdminReq, opts ...grpc.CallOption) (*GetShopAdminResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopAdmin(ctx, in, opts...)
}

// 店铺信息修改
func (m *defaultAms) UpDateShop(ctx context.Context, in *UpDateShopReq, opts ...grpc.CallOption) (*UpDateShopResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.UpDateShop(ctx, in, opts...)
}

// 删除店铺
func (m *defaultAms) DeleteShop(ctx context.Context, in *DeleteShopReq, opts ...grpc.CallOption) (*DeleteShopResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteShop(ctx, in, opts...)
}

// 获取商品类型列表
func (m *defaultAms) GetProductTypeList(ctx context.Context, in *GetProductTypeListReq, opts ...grpc.CallOption) (*GetProductTypeListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetProductTypeList(ctx, in, opts...)
}

// 设置商品类型
func (m *defaultAms) PostProductType(ctx context.Context, in *PostProductTypeReq, opts ...grpc.CallOption) (*PostProductTypeResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostProductType(ctx, in, opts...)
}

// 修改商品类型
func (m *defaultAms) UpDateProductType(ctx context.Context, in *UpDateProductTypeReq, opts ...grpc.CallOption) (*UpDateProductTypeResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.UpDateProductType(ctx, in, opts...)
}

// 删除商品类型
func (m *defaultAms) DeleteProductType(ctx context.Context, in *DeleteProductTypeReq, opts ...grpc.CallOption) (*DeleteProductTypeResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeleteProductType(ctx, in, opts...)
}

// 查看全部店铺员工列表
func (m *defaultAms) GetAllShopStaffList(ctx context.Context, in *GetAllShopStaffListReq, opts ...grpc.CallOption) (*GetAllShopStaffListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetAllShopStaffList(ctx, in, opts...)
}

// 店铺查询人员列表
func (m *defaultAms) GetShopStaffList(ctx context.Context, in *GetShopStaffListReq, opts ...grpc.CallOption) (*GetShopStaffListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopStaffList(ctx, in, opts...)
}

// 各个门店人数统计
func (m *defaultAms) GetShopAllStaffSumList(ctx context.Context, in *GetShopAllStaffSumListReq, opts ...grpc.CallOption) (*GetShopAllStaffSumListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopAllStaffSumList(ctx, in, opts...)
}

// 用户信息列表
func (m *defaultAms) GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetUserList(ctx, in, opts...)
}

// 身份信息列表查看
func (m *defaultAms) GetPositionList(ctx context.Context, in *GetPositionListReq, opts ...grpc.CallOption) (*GetPositionListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetPositionList(ctx, in, opts...)
}

// 身份信息设置
func (m *defaultAms) PostPosition(ctx context.Context, in *PostPositionReq, opts ...grpc.CallOption) (*PostPositionResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.PostPosition(ctx, in, opts...)
}

// 身份信息修改
func (m *defaultAms) UpDatePosition(ctx context.Context, in *UpDatePositionReq, opts ...grpc.CallOption) (*UpDatePositionResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.UpDatePosition(ctx, in, opts...)
}

// 身份信息删除
func (m *defaultAms) DeletePosition(ctx context.Context, in *DeletePositionReq, opts ...grpc.CallOption) (*DeletePositionResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.DeletePosition(ctx, in, opts...)
}

// 店铺数量
func (m *defaultAms) GetShopSum(ctx context.Context, in *GetShopSumReq, opts ...grpc.CallOption) (*GetShopSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopSum(ctx, in, opts...)
}

// 用户人数
func (m *defaultAms) GetUserSum(ctx context.Context, in *GetUserSumReq, opts ...grpc.CallOption) (*GetUserSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetUserSum(ctx, in, opts...)
}

// 商品模块
func (m *defaultAms) GetShopLowProductList(ctx context.Context, in *GetShopLowProductListReq, opts ...grpc.CallOption) (*GetShopLowProductListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopLowProductList(ctx, in, opts...)
}

// 进行门店对应折扣商品数量统计
func (m *defaultAms) GetShopLowProductSum(ctx context.Context, in *GetShopLowProductSumReq, opts ...grpc.CallOption) (*GetShopLowProductSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopLowProductSum(ctx, in, opts...)
}

// 门店普通商品
func (m *defaultAms) GetShopProductList(ctx context.Context, in *GetShopProductListReq, opts ...grpc.CallOption) (*GetShopProductListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopProductList(ctx, in, opts...)
}

// 进行门店对应普通商品数量统计
func (m *defaultAms) GetShopProductSum(ctx context.Context, in *GetShopProductSumReq, opts ...grpc.CallOption) (*GetShopProductSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopProductSum(ctx, in, opts...)
}

// 统计折扣商品总量
func (m *defaultAms) GetLowProductSum(ctx context.Context, in *GetLowProductSumReq, opts ...grpc.CallOption) (*GetLowProductSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetLowProductSum(ctx, in, opts...)
}

// 统计普通商品总量
func (m *defaultAms) GetProductSum(ctx context.Context, in *GetProductSumReq, opts ...grpc.CallOption) (*GetProductSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetProductSum(ctx, in, opts...)
}

// 销售数据
func (m *defaultAms) GetShopSalesRecordsSum(ctx context.Context, in *GetShopSalesRecordsSumReq, opts ...grpc.CallOption) (*GetShopSalesRecordsSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopSalesRecordsSum(ctx, in, opts...)
}

// 各个店铺商品总销售的数据列表
func (m *defaultAms) GetShopSalesRecordsList(ctx context.Context, in *GetShopSalesRecordsListReq, opts ...grpc.CallOption) (*GetShopSalesRecordsListResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopSalesRecordsList(ctx, in, opts...)
}

// 各个店铺根据时间段的订单数量
func (m *defaultAms) GetShopTimeOrderSum(ctx context.Context, in *GetShopTimeOrderSumReq, opts ...grpc.CallOption) (*GetShopTimeOrderSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopTimeOrderSum(ctx, in, opts...)
}

// 各个店铺总的订单数量
func (m *defaultAms) GetShopOrderSum(ctx context.Context, in *GetShopOrderSumReq, opts ...grpc.CallOption) (*GetShopOrderSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetShopOrderSum(ctx, in, opts...)
}

// 今日消费用户数量
func (m *defaultAms) GetOrderSum(ctx context.Context, in *GetOrderSumReq, opts ...grpc.CallOption) (*GetOrderSumResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetOrderSum(ctx, in, opts...)
}

// 今日新增用户数量
func (m *defaultAms) GetNewUserSumToDay(ctx context.Context, in *GetNewUserSumToDayReq, opts ...grpc.CallOption) (*GetNewUserSumToDayResp, error) {
	client := ams.NewAmsClient(m.cli.Conn())
	return client.GetNewUserSumToDay(ctx, in, opts...)
}
