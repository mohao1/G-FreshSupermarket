// Code generated by goctl. DO NOT EDIT.
// Source: Payment.proto

package paymentclient

import (
	"context"

	"DP/rpc/Payment/pb/payment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CancelPaymentReq  = payment.CancelPaymentReq
	CancelPaymentResp = payment.CancelPaymentResp
	PaymentReq        = payment.PaymentReq
	PaymentResp       = payment.PaymentResp

	Payment interface {
		// 付款
		Payment(ctx context.Context, in *PaymentReq, opts ...grpc.CallOption) (*PaymentResp, error)
		// 取消付款
		CancelPayment(ctx context.Context, in *CancelPaymentReq, opts ...grpc.CallOption) (*CancelPaymentResp, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

// 付款
func (m *defaultPayment) Payment(ctx context.Context, in *PaymentReq, opts ...grpc.CallOption) (*PaymentResp, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.Payment(ctx, in, opts...)
}

// 取消付款
func (m *defaultPayment) CancelPayment(ctx context.Context, in *CancelPaymentReq, opts ...grpc.CallOption) (*CancelPaymentResp, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.CancelPayment(ctx, in, opts...)
}
